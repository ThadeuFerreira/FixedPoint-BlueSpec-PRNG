/*
 * Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
 * 
 * On Fri May  4 01:26:29 -03 2018
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkBoxMullerTb_h__
#define __mkBoxMullerTb_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkBoxMuller.h"


/* Class declaration for the mkBoxMullerTb module */
class MOD_mkBoxMullerTb : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt64> INST__unnamed_;
  MOD_Wire<tUInt8> INST_abort;
  MOD_mkBoxMuller INST_boxmuller;
  MOD_Reg<tUInt32> INST_cont;
  MOD_Reg<tUInt64> INST_i;
  MOD_Reg<tUInt32> INST_n;
  MOD_Reg<tUInt8> INST_running;
  MOD_Reg<tUInt8> INST_start_reg;
  MOD_Reg<tUInt8> INST_start_reg_1;
  MOD_Wire<tUInt8> INST_start_reg_2;
  MOD_Wire<tUInt8> INST_start_wire;
  MOD_Reg<tUInt8> INST_state_can_overlap;
  MOD_Reg<tUInt8> INST_state_fired;
  MOD_Wire<tUInt8> INST_state_fired_1;
  MOD_ConfigReg<tUInt8> INST_state_mkFSMstate;
  MOD_Wire<tUInt8> INST_state_overlap_pw;
  MOD_Wire<tUInt8> INST_state_set_pw;
  MOD_Reg<tUWide> INST_tup;
 
 /* Constructor */
 public:
  MOD_mkBoxMullerTb(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE___me_check_15;
  tUInt8 DEF_CAN_FIRE___me_check_15;
  tUInt8 DEF_WILL_FIRE___me_check_14;
  tUInt8 DEF_CAN_FIRE___me_check_14;
  tUInt8 DEF_WILL_FIRE___me_check_13;
  tUInt8 DEF_CAN_FIRE___me_check_13;
  tUInt8 DEF_WILL_FIRE___me_check_12;
  tUInt8 DEF_CAN_FIRE___me_check_12;
  tUInt8 DEF_WILL_FIRE___me_check_11;
  tUInt8 DEF_CAN_FIRE___me_check_11;
  tUInt8 DEF_WILL_FIRE___me_check_10;
  tUInt8 DEF_CAN_FIRE___me_check_10;
  tUInt8 DEF_WILL_FIRE___me_check_9;
  tUInt8 DEF_CAN_FIRE___me_check_9;
  tUInt8 DEF_WILL_FIRE___me_check_8;
  tUInt8 DEF_CAN_FIRE___me_check_8;
  tUInt8 DEF_WILL_FIRE___me_check_7;
  tUInt8 DEF_CAN_FIRE___me_check_7;
  tUInt8 DEF_WILL_FIRE___me_check_6;
  tUInt8 DEF_CAN_FIRE___me_check_6;
  tUInt8 DEF_WILL_FIRE___me_check_5;
  tUInt8 DEF_CAN_FIRE___me_check_5;
  tUInt8 DEF_WILL_FIRE_RL_auto_finish;
  tUInt8 DEF_CAN_FIRE_RL_auto_finish;
  tUInt8 DEF_WILL_FIRE_RL_auto_start;
  tUInt8 DEF_CAN_FIRE_RL_auto_start;
  tUInt8 DEF_WILL_FIRE_RL_fsm_start;
  tUInt8 DEF_CAN_FIRE_RL_fsm_start;
  tUInt8 DEF_WILL_FIRE_RL_idle_l59c9_1;
  tUInt8 DEF_CAN_FIRE_RL_idle_l59c9_1;
  tUInt8 DEF_WILL_FIRE_RL_idle_l59c9;
  tUInt8 DEF_CAN_FIRE_RL_idle_l59c9;
  tUInt8 DEF_WILL_FIRE_RL_action_l91c13;
  tUInt8 DEF_CAN_FIRE_RL_action_l91c13;
  tUInt8 DEF_WILL_FIRE_RL_action_l89c13;
  tUInt8 DEF_CAN_FIRE_RL_action_l89c13;
  tUInt8 DEF_WILL_FIRE_RL_action_l88c22;
  tUInt8 DEF_CAN_FIRE_RL_action_l88c22;
  tUInt8 DEF_WILL_FIRE_RL_action_l87c13;
  tUInt8 DEF_CAN_FIRE_RL_action_l87c13;
  tUInt8 DEF_WILL_FIRE_RL_action_l86c13;
  tUInt8 DEF_CAN_FIRE_RL_action_l86c13;
  tUInt8 DEF_WILL_FIRE_RL_action_l82c13;
  tUInt8 DEF_CAN_FIRE_RL_action_l82c13;
  tUInt8 DEF_WILL_FIRE_RL_action_l80c22;
  tUInt8 DEF_CAN_FIRE_RL_action_l80c22;
  tUInt8 DEF_WILL_FIRE_RL_action_l79c22;
  tUInt8 DEF_CAN_FIRE_RL_action_l79c22;
  tUInt8 DEF_WILL_FIRE_RL_action_l73c12;
  tUInt8 DEF_CAN_FIRE_RL_action_l73c12;
  tUInt8 DEF_WILL_FIRE_RL_action_l69c9;
  tUInt8 DEF_CAN_FIRE_RL_action_l69c9;
  tUInt8 DEF_WILL_FIRE_RL_action_l65c9;
  tUInt8 DEF_CAN_FIRE_RL_action_l65c9;
  tUInt8 DEF_WILL_FIRE_RL_action_l61c9;
  tUInt8 DEF_CAN_FIRE_RL_action_l61c9;
  tUInt8 DEF_WILL_FIRE_RL_restart;
  tUInt8 DEF_CAN_FIRE_RL_restart;
  tUInt8 DEF_WILL_FIRE_RL_state_every;
  tUInt8 DEF_CAN_FIRE_RL_state_every;
  tUInt8 DEF_WILL_FIRE_RL_state_fired__dreg_update;
  tUInt8 DEF_CAN_FIRE_RL_state_fired__dreg_update;
  tUInt8 DEF_WILL_FIRE_RL_state_handle_abort;
  tUInt8 DEF_CAN_FIRE_RL_state_handle_abort;
  tUInt8 DEF_WILL_FIRE_RL_start_reg__dreg_update;
  tUInt8 DEF_CAN_FIRE_RL_start_reg__dreg_update;
  tUInt64 DEF_b__h9687;
 
 /* Local definitions */
 private:
  tUInt64 DEF_v__h33823;
  tUInt64 DEF_v__h33515;
  tUWide DEF_ab__h33173;
  tUWide DEF_ab__h33841;
  tUInt32 DEF_in2_i__h27554;
  tUWide DEF_IF_cont_8_BIT_31_9_THEN_NEG_cont_8_CONCAT_0_0__ETC___d66;
  tUWide DEF_IF_cont_8_BIT_31_9_THEN_NEG_cont_8_CONCAT_0_0__ETC___d63;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_10_M_ETC___d216;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_10_M_ETC___d215;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_10_M_ETC___d207;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_10_M_ETC___d206;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_10_M_ETC___d198;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_10_M_ETC___d197;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_0_CO_ETC___d189;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_0_CO_ETC___d188;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0__ETC___d180;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0__ETC___d179;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d171;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d170;
  tUWide DEF__10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d162;
  tUWide DEF__10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d161;
  tUWide DEF__10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_tup_12_ETC___d153;
  tUWide DEF__10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_tup_12_ETC___d152;
  tUWide DEF__10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_tup_12_BITS_6_ETC___d144;
  tUWide DEF__10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_tup_12_BITS_6_ETC___d143;
  tUWide DEF_IF_NOT_IF_cont_8_BIT_31_9_THEN_NEG_cont_8_CONC_ETC___d78;
  tUWide DEF__0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_18_19_BI_ETC___d211;
  tUWide DEF__0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_18_19_BI_ETC___d202;
  tUWide DEF__0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_18_19_BI_ETC___d193;
  tUWide DEF__0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_18_19_BI_ETC___d184;
  tUWide DEF__0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_18_19_BI_ETC___d175;
  tUWide DEF__0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_18_19_BI_ETC___d166;
  tUWide DEF__0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_18_19_BI_ETC___d157;
  tUWide DEF__0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_18_19_BI_ETC___d148;
  tUWide DEF__0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_18_19_BI_ETC___d140;
  tUWide DEF__0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_18_19_BI_ETC___d137;
  tUWide DEF__0_CONCAT_0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_ETC___d217;
  tUWide DEF__0_CONCAT_0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_ETC___d208;
  tUWide DEF__0_CONCAT_0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_ETC___d199;
  tUWide DEF__0_CONCAT_0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_ETC___d190;
  tUWide DEF__0_CONCAT_0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_ETC___d181;
  tUWide DEF__0_CONCAT_0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_ETC___d172;
  tUWide DEF__0_CONCAT_0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_ETC___d163;
  tUWide DEF__0_CONCAT_0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_ETC___d154;
  tUWide DEF__0_CONCAT_0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_ETC___d145;
  tUWide DEF_IF_cont_8_BIT_31_9_THEN_NEG_cont_8_CONCAT_0_0__ETC___d75;
  tUWide DEF_y__h35207;
  tUWide DEF_y__h35116;
  tUWide DEF_y__h35025;
  tUWide DEF_y__h34934;
  tUWide DEF_y__h34843;
  tUWide DEF_y__h34752;
  tUWide DEF_y__h34661;
  tUWide DEF_y__h34570;
  tUWide DEF_digit__h34351;
  tUWide DEF__0_CONCAT_IF_SEXT_tup_12_BITS_63_TO_32_18_19_BI_ETC___d136;
  tUWide DEF_tx__h35146;
  tUWide DEF_tx__h35055;
  tUWide DEF_tx__h34964;
  tUWide DEF_tx__h34873;
  tUWide DEF_tx__h34782;
  tUWide DEF_tx__h34691;
  tUWide DEF_tx__h34600;
  tUWide DEF_tx__h34509;
  tUWide DEF_tx__h34418;
  tUWide DEF__0_CONCAT_IF_IF_cont_8_BIT_31_9_THEN_NEG_cont_8_ETC___d74;
  tUWide DEF_digit__h35057;
  tUWide DEF_digit__h34966;
  tUWide DEF_digit__h34875;
  tUWide DEF_digit__h34784;
  tUWide DEF_digit__h34693;
  tUWide DEF_digit__h34602;
  tUWide DEF_digit__h34511;
  tUWide DEF_digit__h34420;
  tUWide DEF_digit__h35148;
 
 /* Rules */
 public:
  void RL_start_reg__dreg_update();
  void RL_state_handle_abort();
  void RL_state_fired__dreg_update();
  void RL_state_every();
  void RL_restart();
  void RL_action_l61c9();
  void RL_action_l65c9();
  void RL_action_l69c9();
  void RL_action_l73c12();
  void RL_action_l79c22();
  void RL_action_l80c22();
  void RL_action_l82c13();
  void RL_action_l86c13();
  void RL_action_l87c13();
  void RL_action_l88c22();
  void RL_action_l89c13();
  void RL_action_l91c13();
  void RL_idle_l59c9();
  void RL_idle_l59c9_1();
  void RL_fsm_start();
  void RL_auto_start();
  void RL_auto_finish();
  void __me_check_5();
  void __me_check_6();
  void __me_check_7();
  void __me_check_8();
  void __me_check_9();
  void __me_check_10();
  void __me_check_11();
  void __me_check_12();
  void __me_check_13();
  void __me_check_14();
  void __me_check_15();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkBoxMullerTb &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkBoxMullerTb &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkBoxMullerTb &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkBoxMullerTb &backing);
};

#endif /* ifndef __mkBoxMullerTb_h__ */
