/*
 * Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
 * 
 * On Tue May  1 19:04:43 -03 2018
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkWellPRNG_h__
#define __mkWellPRNG_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkWellPRNG module */
class MOD_mkWellPRNG : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt32> INST_state_0;
  MOD_Reg<tUInt32> INST_state_1;
  MOD_Reg<tUInt32> INST_state_10;
  MOD_Reg<tUInt32> INST_state_11;
  MOD_Reg<tUInt32> INST_state_12;
  MOD_Reg<tUInt32> INST_state_13;
  MOD_Reg<tUInt32> INST_state_14;
  MOD_Reg<tUInt32> INST_state_15;
  MOD_Reg<tUInt32> INST_state_2;
  MOD_Reg<tUInt32> INST_state_3;
  MOD_Reg<tUInt32> INST_state_4;
  MOD_Reg<tUInt32> INST_state_5;
  MOD_Reg<tUInt32> INST_state_6;
  MOD_Reg<tUInt32> INST_state_7;
  MOD_Reg<tUInt32> INST_state_8;
  MOD_Reg<tUInt32> INST_state_9;
  MOD_Reg<tUInt32> INST_state_i;
  MOD_Reg<tUInt32> INST_z0;
  MOD_Reg<tUInt32> INST_z1;
  MOD_Reg<tUInt32> INST_z2;
 
 /* Constructor */
 public:
  MOD_mkWellPRNG(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUInt8 PORT_EN_initialize;
  tUInt8 PORT_EN_get;
  tUInt32 PORT_initialize_s;
  tUInt8 PORT_RDY_initialize;
  tUInt32 PORT_get;
  tUInt8 PORT_RDY_get;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_get;
  tUInt8 DEF_WILL_FIRE_initialize;
  tUInt8 DEF_CAN_FIRE_get;
  tUInt8 DEF_CAN_FIRE_initialize;
 
 /* Local definitions */
 private:
 
 /* Rules */
 public:
 
 /* Methods */
 public:
  void METH_initialize(tUInt32 ARG_initialize_s);
  tUInt8 METH_RDY_initialize();
  tUInt32 METH_get();
  tUInt8 METH_RDY_get();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkWellPRNG &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkWellPRNG &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkWellPRNG &backing);
};

#endif /* ifndef __mkWellPRNG_h__ */
